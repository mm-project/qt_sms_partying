#!/usr/bin/perl
$info_file=$ARGV[0];
$hp_file=$ARGV[1];
$aa_file=$ARGV[2];


open my $fh, '<', $info_file or die "Can't open '$info_file': $!";

my %info;

while (<$fh>) {
  next unless /^[A-Z]/;
  chomp;
  my ($name, $code, $operator) = split /,/;
  push @{ $info{$name.":".$code} }, $operator;
}

close($fh);


open my $CF, '>', $hp_file or die "Can't open '$info_file': $!";
open my $AA, '>', $aa_file or die "Can't open '$info_file': $!";


print $AA "#ifndef SPEC_HPP\n";
print $AA "#define SPEC_HPP\n";
print $AA "	\n";
print $AA "#include \"country.hpp\"\n";
print $AA "\n";
print $AA "//AUTOGENERATED HEADER \n";
print $AA "//!DO NOT MODIFY!\n";
print $AA "\n";
print $AA "#include \"autogen_country_enum.hpp\"\n";
#print $AA "#endif\n";

print $CF "#ifndef ENUM_HPP\n";
print $CF "#define ENUM_HPP\n";
print $CF "//AUTOGENERATED HEADER \n";
print $CF "//!DO NOT MODIFY!\n";
print $CF "\n";
print $CF "enum CountryName \n";
print $CF "{\n";



#print $AA "--------------------------------------\n";
foreach my $i (keys %info) {
	my ($name,$code) = split(":",$i);
	$orig_name = $name;
	$name=~s/( )//g;
	$name=~s/([^a-z,A-Z]+)//g;
	
	
	
	
	$sz++;
	print $CF "	$name,\n";
	
	print $AA "\n";
	print $AA "template <>                                                                 \n";
	print $AA "class CountryInfo<$name> : public GenericCountry                            \n";
	print $AA "{                                                                           \n";
	print $AA "	public:                                                                    \n";
	print $AA "		                                                                       \n";
	print $AA "		QString get_country_name() { return \"$orig_name\"; }                       \n";
	print $AA "		QString get_phone_code() { return \"$code\"; }                         \n";
	print $AA "		QIcon get_flag_icon() { return QIcon(ICONS_DIR_STR(\"$name.png\")); }  \n";
	print $AA "		QStringList get_mobile_operator_codes() {                              \n";
	print $AA "			QStringList z;                                                     \n";
		foreach my $op (@{ $info{$i} }) {
			if ($op !~ /[^0-9]/) {
				print $AA "	        	z << \"$op\";         			\n";
			}
		}
	print $AA "			                                                                   \n";
	print $AA "			return z;                                                          \n";
	print $AA "		}                                                                      \n";
	print $AA "};                                                                          \n";
}

print $AA "#endif\n";


print $CF "	Size = $sz\n";
print $CF "};\n\n";

print $CF "template <CountryName a>\n";
print $CF "class CountryInfo;\n";
print $CF "\n";

print $CF "#endif\n";

close($CF);
close($AA);

